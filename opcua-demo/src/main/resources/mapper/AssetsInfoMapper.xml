<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rookie.opcua.mapper.AssetsInfoMapper">

    <select id="findAssetsInfoTmepByComPanyCodeAndCardCode" resultType="com.rookie.opcua.entity.AssetsInfo">
        select * from t_assets_info_tmp where company_code = #{companyCode} and card_code = #{cardCode}
    </select>
    <select id="findAssetsInfoById" parameterType="com.rookie.opcua.entity.AssetsInfo" resultType="com.rookie.opcua.entity.AssetsInfo">
        select * from t_assets_info_${city}  where id = #{id} and assets_status = '1'
    </select>

    <select id = "findAssetsInfoByComPanyCodeAndCardCode" parameterType="String" resultType="com.rookie.opcua.entity.AssetsInfo">
        select * from t_assets_info_${city} where  card_code = #{cardCode} AND  assets_status = '1'
    </select>

    <select id="findAssetsInfoByCompanyCodeAndCardCodeOrderByCreateTime" parameterType="String" resultType="com.rookie.opcua.entity.AssetsInfo">
        select * from t_assets_info_${city} where company_code = #{companyCode} and card_code = #{cardCode}  order by create_time desc
    </select>

    <select id="findAssetsInfoRepeatCardCode" parameterType="String" resultType="Map">
        SELECT t.card_code AS cardCode,t.company_code AS companyCode FROM (SELECT COUNT(*) AS cCount ,card_code,company_code FROM t_assets_info_${city}
        WHERE assets_status = '1' AND card_code IS NOT NULL GROUP BY card_code,company_code) t WHERE t.cCount >1
    </select>


    <select id="assetsInfoDataSummanry" parameterType="String" resultType="com.rookie.opcua.dto.AssetInfoForInventCountDTO">
        select t.company_code AS companyCode,t.manage_dept_code AS manageDeptCode, t.manage_dept_name AS manageDeptName,
        ud.organ_id AS organId,
        sum(if(t.check_result = '04', 0, 1)) cardNum,
        sum(if(t.check_status != '03',1,0)) notInvent,
        sum(if(t.check_status = '03', 1, 0)) invent,
        sum(if(t.check_status = '03' and ((t.is_app = '1' AND t.scan_code_record = '1') OR t.is_app IN ('2','3')), 1, 0)) appScanNum,
        sum(if(t.check_status = '03' and t.is_app = '1' and t.scan_code_record = '0', 1, 0)) appNotScanNum,
        sum(if(t.check_status = '03' and (t.is_app = '0' or t.is_app is null), 1, 0)) pcNum,
        sum(if(t.check_status = '03' and t.check_result = '01', 1, 0)) inerrantNum,
        sum(if(t.check_status = '03' and t.check_result = '02', 1, 0)) wrongNum,
        sum(if(t.check_status = '03' and t.check_result = '03', 1, 0)) lossesNum,
        sum(if(t.check_status = '03' and t.check_result = '04', 1, 0)) addNum,
        sum(if(t.check_status = '03' and t.check_result = '01', 1, 0)) worthValue
        from t_assets_info_${batchId} t
        left join t_use_department ud on t.use_dept_code = ud.use_code
        left join sys_invent_organ o  on o.id = ud.organ_id
        where t.assets_status = '1'
        and o.region_id = #{regionId}
        and t.manage_dept_code is not null
        and ifnull(t.assets_type_15, '00002999') = #{assetsType}
        group by t.company_code,t.manage_dept_code,t.manage_dept_name,ud.organ_id
    </select>

    <select id="regularInfoDataSummanry" parameterType="String" resultType="com.rookie.opcua.dto.AssetInfoForInventCountDTO">
        select t.company_code AS companyCode,t.manage_dept_code AS manageDeptCode, t.manage_dept_name AS manageDeptName,
        o.id AS organId,
        sum(if(t.check_result = '04', 0, 1)) cardNum,
        sum(if(t.check_status != '03',1,0)) notInvent,
        sum(if(t.check_status = '03', 1, 0)) invent,
        sum(if(t.check_status = '03' and ((t.is_app = '1' AND t.scan_code_record = '1') OR t.is_app IN ('2','3')), 1, 0)) appScanNum,
        sum(if(t.check_status = '03' and t.is_app = '1' and t.scan_code_record = '0', 1, 0)) appNotScanNum,
        sum(if(t.check_status = '03' and (t.is_app = '0' or t.is_app is null), 1, 0)) pcNum,
        sum(if(t.check_status = '03' and t.check_result = '01', 1, 0)) inerrantNum,
        sum(if(t.check_status = '03' and t.check_result = '02', 1, 0)) wrongNum,
        sum(if(t.check_status = '03' and t.check_result = '03', 1, 0)) lossesNum,
        sum(if(t.check_status = '03' and t.check_result = '04', 1, 0)) addNum,
        sum(if(t.check_status = '03' and t.check_result = '01', 1, 0)) worthValue
        from t_assets_info_${regionId} t
        left join t_use_department ud on t.use_dept_code = ud.use_code
        left join sys_invent_organ o  on o.id = ud.organ_id
        where t.assets_status = '1'
        and o.region_id = #{regionId}
        and t.manage_dept_code is not null
        and ifnull(t.assets_type_15, '00002999') = #{assetsType}
        group by t.company_code,t.manage_dept_code,t.manage_dept_name,ud.organ_id
    </select>

    <update id="updateRepeatAssets" parameterType="String">
        update t_assets_info_${city} set
        id = #{updateId},
        assets_status = #{assetsStatus}
        where id = #{oldId}
    </update>

    <update id="updateAsstesForNew" parameterType="com.rookie.opcua.dto.AssetsInfoUpdateDTO">
        update t_assets_info_${city} set
        id = #{oldId},
        current_node_id = #{currentNodeId},
        is_outside = #{isOutside},
        is_submitted = #{isSubmitted},
        check_Time = #{checkTime},
        check_status = #{checkStatus},
        check_result = #{checkResult},
        user_name = #{userName}
        where id = #{id}
    </update>

    <update id="updateAssetsInfo" parameterType="com.rookie.opcua.entity.AssetsInfo" >
        update t_assets_info_${city} set
        ID = #{id},
        tag_type = #{tagType},
        batch_id = #{batchId},
        spec_id = #{specId},
        version = #{version},
        sharing_id = #{sharingId},
        osszseq = #{osszseq},
        card_secondCode = #{cardSecondCode},
        wbs = #{wbs},
        client_name = #{clientName},
        description = #{description},
        addtion_reason = #{addtionReason},
        pgyz = #{pgyz},
        pgljzj = #{pgljzj},
        pgljjz = #{pgljjz},
        is_stay_sale = #{isStaySale},
        is_for_srcap = #{isForSrcap},
        is_idle = #{isIdle},
        is_developasset = #{isDevelopasset},
        area_code = #{areaCode},
        county_offices = #{countyOffices},
        branch = #{branch},
        business_offices_id = #{businessOfficesId},
        team = #{team},
        is_expansion = #{isExpansion},
        is_impairment = #{isImpairment},
        depreciae_range1 = #{depreciaeRange1},
        depreciae_code1 = #{depreciaeCode1},
        depreciae_range2 = #{depreciaeRange2},
        depreciae_code2 = #{depreciaeCode2},
        durable_years2 = #{durableYears2},
        period2 = #{period2},
        position_code = #{positionCode},
        unactive_date = #{unactiveDate},
        purchased_date = #{purchasedDate},
        purchased_year = #{purchasedYear},
        first_billing = #{firstBilling},
        is_disable = #{isDisable},
        develop_asset = #{developAsset},
        is_rent = #{isRent},
        is_lease = #{isLease},
        card_entials = #{cardEntials},
        depreciae_statu = #{depreciaeStatu},
        wbs_element = #{wbsElement},
        usefulmonths = #{usefulmonths},
        original_code = #{originalCode},
        is_parent = #{isParent},
        durable_life = #{durableLife},
        user_name = #{userName},
        station_name = #{stationName},
        card_code = #{cardCode},
        check_status = #{checkStatus},
        check_result = #{checkResult},
        label_status = #{labelStatus},
        card_object_status = #{cardObjectStatus},
        check_location = #{checkLocation},
        check_longitude = #{checkLongitude},
        check_latitude = #{checkLatitude},
        is_outside = #{isOutside},
        current_node_id = #{currentNodeId},
        company_code = #{companyCode},
        company_name = #{companyName},
        use_dept_code = #{useDeptCode},
        use_dept_name = #{useDeptName},
        manage_dept_code = #{manageDeptCode},
        manage_dept_name = #{manageDeptName},
        cost_code = #{costCode},
        cost_name = #{costName},
        assets_name = #{assetsName},
        assets_type_15 = #{assetsType15},
        assets_type = #{assetsType},
        assets_nature = #{assetsNature},
        assets_ascri = #{assetsAscri},
        assets_catalog = #{assetsCatalog},
        abc_class = #{abcClass},
        cost_type = #{costType},
        is_client_assets = #{isClientAssets},
        assets_mamage_person = #{assetsMamagePerson},
        assets_keep_person = #{assetsKeepPerson},
        assets_mamage_name = #{assetsMamageName},
        assets_keep_name = #{assetsKeepName},
        liable_penson = #{liablePenson},
        is_stop_estimate = #{isStopEstimate},
        manufacturer = #{manufacturer},
        capital_date = #{capitalDate},
        is_overdue = #{isOverdue},
        is_deprec = #{isDeprec},
        number_A = #{numberA},
        number_name = #{numberName},
        original_value = #{originalValue},
        worth_value = #{worthValue},
        accum_deprec = #{accumDeprec},
        deprec_value = #{deprecValue},
        engin_code = #{enginCode},
        engin_name = #{enginName},
        spec_program = #{specProgram},
        address = #{address},
        engin_remarks = #{enginRemarks},
        is_network = #{isNetwork},
        provin_code = #{provinCode},
        assets_status = #{assetsStatus},
        assets_create_time = #{assetsCreateTime},
        assets_update_time = #{assetsUpdateTime},
        profit_group_code = #{profitGroupCode},
        profit_group_name = #{profitGroupName},
        city_code = #{cityCode},
        city_name = #{cityName},
        old_assets_no = #{oldAssetsNo},
        sub_attachment = #{subAttachment},
        sub_remarks = #{subRemarks},
        overdue_date = #{overdueDate},
        source_code = #{sourceCode},
        relation_id = #{relationId},
        relation_id_mark = #{relationIdMark},
        durable_years = #{durableYears},
        period = #{period},
        parent_assets_code = #{parentAssetsCode},
        is_frozen = #{isFrozen},
        packet_code = #{packetCode},
        check_Time = #{checkTime},
        sign_uuid = #{signUUID},
        sign_user = #{signUser},
        scan_code_record = #{scanCodeRecord},
        has_assetTag = #{hasAssetTag},
        is_download = #{isDownload},
        is_submitted = #{isSubmitted},
        create_time = #{createTime},
        last_update_time = #{lastUpdateTime},
        residual_value = #{residualValue},
        is_check = #{isCheck},
        is_app = #{isApp},
        poverty_alleviat =#{povertyAlleviat},
        license = #{license},
        license_method = #{licenseMethod},
        due_date = #{dueDate},
        software_manage_depart_code = #{softwareManageDepartCode},
        software_maint_depart_code = #{softwareMaintDepartCode},
        status = #{status}
        where id = #{id}
    </update>

    <insert id="insertAssetsInfo" parameterType="com.rookie.opcua.entity.AssetsInfo">
        insert into t_assets_info_${city} (
        `id`,
        `current_node_id`,
        `batch_id`,
        `user_name`,
        `station_name`,
        `card_code`,
        `check_status`,
        `check_result`,
        `label_status`,
        `card_object_status`,
        `check_location`,
        `is_outside`,
        `company_code`,
        `company_name`,
        `use_dept_code`,
        `use_dept_name`,
        `manage_dept_code`,
        `manage_dept_name`,
        `cost_code`,
        `cost_name`,
        `assets_name`,
        `assets_type_15`,
        `assets_type`,
        `assets_nature`,
        `assets_ascri`,
        `assets_catalog`,
        `abc_class`,
        `cost_type`,
        `is_client_assets`,
        `assets_mamage_person`,
        `assets_keep_person`,
        `assets_mamage_name`,
        `assets_keep_name`,
        `liable_penson`,
        `is_stop_estimate`,
        `manufacturer`,
        `capital_date`,
        `is_overdue`,
        `is_deprec`,
        `number_a`,
        `number_name`,
        `original_value`,
        `worth_value`,
        `accum_deprec`,
        `deprec_value`,
        `engin_code`,
        `engin_name`,
        `spec_program`,
        `address`,
        `engin_remarks`,
        `is_network`,
        `provin_code`,
        `assets_status`,
        `assets_create_time`,
        `assets_update_time`,
        `profit_group_code`,
        `profit_group_name`,
        `city_code`,
        `city_name`,
        `old_assets_no`,
        `sub_attachment`,
        `sub_remarks`,
        `overdue_date`,
        `source_code`,
        `relation_id`,
        `durable_years`,
        `period`,
        `parent_assets_code`,
        `is_frozen`,
        `packet_code`,
        `check_Time`,
        `has_assetTag`,
        `sign_uuid`,
        `create_time`,
        `last_update_time`,
        `is_download`,
        `scan_code_record`,
        `spec_id`,
        `version`,
        `sharing_id`,
        `osszseq`,
        `card_secondCode`,
        `wbs`,
        `client_name`,
        `description`,
        `addtion_reason`,
        `pgyz`,
        `pgljzj`,
        `pgljjz`,
        `is_stay_sale`,
        `is_for_srcap`,
        `is_idle`,
        `is_developasset`,
        `area_code`,
        `county_offices`,
        `branch`,
        `business_offices_id`,
        `team`,
        `is_expansion`,
        `is_impairment`,
        `depreciae_range1`,
        `depreciae_code1`,
        `depreciae_range2`,
        `depreciae_code2`,
        `durable_years2`,
        `period2`,
        `position_code`,
        `unactive_date`,
        `purchased_date`,
        `purchased_year`,
        `first_billing`,
        `is_disable`,
        `develop_asset`,
        `is_rent`,
        `is_lease`,
        `card_entials`,
        `depreciae_statu`,
        `wbs_element`,
        `usefulmonths`,
        `original_code`,
        `is_parent`,
        `durable_life`,
        `is_submitted`,
        `tag_type`,
        `is_rollback`,
        `relation_id_mark`,
        `sign_user`,
        `check_longitude`,
        `check_latitude`,
        `residual_value`,
        `is_check`,
        `is_app`,
        `poverty_alleviat`,
        `license`,
        `license_method`,
        `due_date`,
        `software_manage_depart_code`,
        `software_maint_depart_code`,
        `status`)
        values
        (
        #{id},
        #{currentNodeId},
        #{batchId},
        #{userName},
        #{stationName},
        #{cardCode},
        #{checkStatus},
        #{checkResult},
        #{labelStatus},
        #{cardObjectStatus},
        #{checkLocation},
        #{isOutside},
        #{companyCode},
        #{companyName},
        #{useDeptCode},
        #{useDeptName},
        #{manageDeptCode},
        #{manageDeptName},
        #{costCode},
        #{costName},
        #{assetsName},
        #{assetsType15},
        #{assetsType},
        #{assetsNature},
        #{assetsAscri},
        #{assetsCatalog},
        #{abcClass},
        #{costType},
        #{isClientAssets},
        #{assetsMamagePerson},
        #{assetsKeepPerson},
        #{assetsMamageName},
        #{assetsKeepName},
        #{liablePenson},
        #{isStopEstimate},
        #{manufacturer},
        #{capitalDate},
        #{isOverdue},
        #{isDeprec},
        #{numberA},
        #{numberName},
        #{originalValue},
        #{worthValue},
        #{accumDeprec},
        #{deprecValue},
        #{enginCode},
        #{enginName},
        #{specProgram},
        #{address},
        #{enginRemarks},
        #{isNetwork},
        #{provinCode},
        #{assetsStatus},
        #{assetsCreateTime},
        #{assetsUpdateTime},
        #{profitGroupCode},
        #{profitGroupName},
        #{cityCode},
        #{cityName},
        #{oldAssetsNo},
        #{subAttachment},
        #{subRemarks},
        #{overdueDate},
        #{sourceCode},
        #{relationId},
        #{durableYears},
        #{period},
        #{parentAssetsCode},
        #{isFrozen},
        #{packetCode},
        #{checkTime},
        #{hasAssetTag},
        #{signUUID},
        #{createTime},
        #{lastUpdateTime},
        #{isDownload},
        #{scanCodeRecord},
        #{specId},
        #{version},
        #{sharingId},
        #{osszseq},
        #{cardSecondCode},
        #{wbs},
        #{clientName},
        #{description},
        #{addtionReason},
        #{pgyz},
        #{pgljzj},
        #{pgljjz},
        #{isStaySale},
        #{isForSrcap},
        #{isIdle},
        #{isDevelopasset},
        #{areaCode},
        #{countyOffices},
        #{branch},
        #{businessOfficesId},
        #{team},
        #{isExpansion},
        #{isImpairment},
        #{depreciaeRange1},
        #{depreciaeCode1},
        #{depreciaeRange2},
        #{depreciaeCode2},
        #{durableYears2},
        #{period2},
        #{positionCode},
        #{unactiveDate},
        #{purchasedDate},
        #{purchasedYear},
        #{firstBilling},
        #{isDisable},
        #{developAsset},
        #{isRent},
        #{isLease},
        #{cardEntials},
        #{depreciaeStatu},
        #{wbsElement},
        #{usefulmonths},
        #{originalCode},
        #{isParent},
        #{durableLife},
        #{isSubmitted},
        #{tagType},
        #{isRollback},
        #{relationIdMark},
        #{signUser},
        #{checkLongitude},
        #{checkLatitude},
        #{residualValue},
        #{isCheck},
        #{isApp},
        #{povertyAlleviat},
        #{license},
        #{licenseMethod},
        #{dueDate},
        #{softwareManageDepartCode},
        #{softwareMaintDepartCode},
        #{status});
    </insert>
    <insert id="insertAssetsInfoList" parameterType="com.rookie.opcua.entity.AssetsInfo">
        insert into t_assets_info_${city} (
        `id`,
        `current_node_id`,
        `batch_id`,
        `user_name`,
        `station_name`,
        `card_code`,
        `check_status`,
        `check_result`,
        `label_status`,
        `card_object_status`,
        `check_location`,
        `is_outside`,
        `company_code`,
        `company_name`,
        `use_dept_code`,
        `use_dept_name`,
        `manage_dept_code`,
        `manage_dept_name`,
        `cost_code`,
        `cost_name`,
        `assets_name`,
        `assets_type_15`,
        `assets_type`,
        `assets_nature`,
        `assets_ascri`,
        `assets_catalog`,
        `abc_class`,
        `cost_type`,
        `is_client_assets`,
        `assets_mamage_person`,
        `assets_keep_person`,
        `assets_mamage_name`,
        `assets_keep_name`,
        `liable_penson`,
        `is_stop_estimate`,
        `manufacturer`,
        `capital_date`,
        `is_overdue`,
        `is_deprec`,
        `number_a`,
        `number_name`,
        `original_value`,
        `worth_value`,
        `accum_deprec`,
        `deprec_value`,
        `engin_code`,
        `engin_name`,
        `spec_program`,
        `address`,
        `engin_remarks`,
        `is_network`,
        `provin_code`,
        `assets_status`,
        `assets_create_time`,
        `assets_update_time`,
        `profit_group_code`,
        `profit_group_name`,
        `city_code`,
        `city_name`,
        `old_assets_no`,
        `sub_attachment`,
        `sub_remarks`,
        `overdue_date`,
        `source_code`,
        `relation_id`,
        `durable_years`,
        `period`,
        `parent_assets_code`,
        `is_frozen`,
        `packet_code`,
        `check_Time`,
        `has_assetTag`,
        `sign_uuid`,
        `create_time`,
        `last_update_time`,
        `is_download`,
        `scan_code_record`,
        `spec_id`,
        `version`,
        `sharing_id`,
        `osszseq`,
        `card_secondCode`,
        `wbs`,
        `client_name`,
        `description`,
        `addtion_reason`,
        `pgyz`,
        `pgljzj`,
        `pgljjz`,
        `is_stay_sale`,
        `is_for_srcap`,
        `is_idle`,
        `is_developasset`,
        `area_code`,
        `county_offices`,
        `branch`,
        `business_offices_id`,
        `team`,
        `is_expansion`,
        `is_impairment`,
        `depreciae_range1`,
        `depreciae_code1`,
        `depreciae_range2`,
        `depreciae_code2`,
        `durable_years2`,
        `period2`,
        `position_code`,
        `unactive_date`,
        `purchased_date`,
        `purchased_year`,
        `first_billing`,
        `is_disable`,
        `develop_asset`,
        `is_rent`,
        `is_lease`,
        `card_entials`,
        `depreciae_statu`,
        `wbs_element`,
        `usefulmonths`,
        `original_code`,
        `is_parent`,
        `durable_life`,
        `is_submitted`,
        `tag_type`,
        `is_rollback`,
        `relation_id_mark`,
        `sign_user`,
        `check_longitude`,
        `check_latitude`,
        `residual_value`,
        `is_check`,
        `is_app`,
        `poverty_alleviat`,
        `license`,
        `license_method`,
        `due_date`,
        `software_manage_depart_code`,
        `software_maint_depart_code`,
        `status`)
        values
        <foreach collection="list" item="item" index="index" separator=",">
        (
        #{id},
        #{currentNodeId},
        #{batchId},
        #{userName},
        #{stationName},
        #{cardCode},
        #{checkStatus},
        #{checkResult},
        #{labelStatus},
        #{cardObjectStatus},
        #{checkLocation},
        #{isOutside},
        #{companyCode},
        #{companyName},
        #{useDeptCode},
        #{useDeptName},
        #{manageDeptCode},
        #{manageDeptName},
        #{costCode},
        #{costName},
        #{assetsName},
        #{assetsType15},
        #{assetsType},
        #{assetsNature},
        #{assetsAscri},
        #{assetsCatalog},
        #{abcClass},
        #{costType},
        #{isClientAssets},
        #{assetsMamagePerson},
            #{assetsKeepPerson},
            #{assetsMamageName},
            #{assetsKeepName},
            #{liablePenson},
            #{isStopEstimate},
            #{manufacturer},
            #{capitalDate},
            #{isOverdue},
            #{isDeprec},
            #{numberA},
            #{numberName},
            #{originalValue},
            #{worthValue},
            #{accumDeprec},
            #{deprecValue},
            #{enginCode},
            #{enginName},
            #{specProgram},
            #{address},
            #{enginRemarks},
            #{isNetwork},
            #{provinCode},
            #{assetsStatus},
            #{assetsCreateTime},
            #{assetsUpdateTime},
            #{profitGroupCode},
            #{profitGroupName},
            #{cityCode},
            #{cityName},
            #{oldAssetsNo},
            #{subAttachment},
            #{subRemarks},
            #{overdueDate},
            #{sourceCode},
            #{relationId},
            #{durableYears},
            #{period},
            #{parentAssetsCode},
            #{isFrozen},
            #{packetCode},
            #{checkTime},
            #{hasAssetTag},
            #{signUUID},
            #{createTime},
            #{lastUpdateTime},
            #{isDownload},
            #{scanCodeRecord},
            #{specId},
            #{version},
            #{sharingId},
            #{osszseq},
            #{cardSecondCode},
            #{wbs},
            #{clientName},
            #{description},
            #{addtionReason},
            #{pgyz},
            #{pgljzj},
            #{pgljjz},
            #{isStaySale},
            #{isForSrcap},
            #{isIdle},
            #{isDevelopasset},
            #{areaCode},
            #{countyOffices},
            #{branch},
            #{businessOfficesId},
            #{team},
            #{isExpansion},
            #{isImpairment},
            #{depreciaeRange1},
            #{depreciaeCode1},
            #{depreciaeRange2},
            #{depreciaeCode2},
            #{durableYears2},
            #{period2},
            #{positionCode},
            #{unactiveDate},
            #{purchasedDate},
            #{purchasedYear},
            #{firstBilling},
            #{isDisable},
            #{developAsset},
            #{isRent},
            #{isLease},
            #{cardEntials},
            #{depreciaeStatu},
            #{wbsElement},
            #{usefulmonths},
            #{originalCode},
            #{isParent},
            #{durableLife},
            #{isSubmitted},
            #{tagType},
            #{isRollback},
            #{relationIdMark},
            #{signUser},
            #{checkLongitude},
            #{checkLatitude},
            #{residualValue},
            #{isCheck},
            #{isApp},
            #{povertyAlleviat},
            #{license},
            #{licenseMethod},
            #{dueDate},
            #{softwareManageDepartCode},
            #{softwareMaintDepartCode},
            #{status});
        </foreach>
    </insert>


    <update id="updateAssetsStatusAndLastUpdateTime" parameterType="com.rookie.opcua.entity.AssetsInfo">
        update t_assets_info_${city}  set assets_status = '0',last_update_time = NOW() where company_code = #{companyCode} and card_code = #{cardCode}
    </update>

    <select id="findAssetEntityNewByAssetId" parameterType="String" resultType="Map">
        select CONCAT(',',entity_id) relationID
        from RR_ASSET_ENTITY_NEW where asset_id = #{assetId}
    </select>
    
    
    <update id="createAssetsInfoTmp" parameterType="String">
        create table if not exists t_assets_info_tmp_${regionId} (like t_assets_info_tmp)
    </update>

    <select id="findCountMssHandleByOrgan" parameterType="String" resultType="com.rookie.opcua.dto.AssetsInfoCountMssDTO">
        SELECT o.id organId,
        COUNT(1) cardNum,
        SUM(IF(t.check_result = '02' AND (nc.gxStatus = '0' OR nc.gxStatus IS NULL), 1,0)) gxwcf,
        SUM(IF(t.check_result = '02' AND nc.gxStatus = '1', 1,0)) gxycf,
        SUM(IF(t.check_result = '02' AND (nc.dbStatus = '0' OR nc.dbStatus IS NULL) AND t.cost_name &lt;&gt; t1.cost_name, 1,0)) dbwcf,
        SUM(IF(t.check_result = '02' AND nc.dbStatus = '1'AND t.cost_name &lt;&gt; t1.cost_name, 1,0)) dbycf,
        SUM(IF(t.check_result = '03' AND (nc.pkStatus = '0' OR nc.pkStatus IS NULL), 1,0)) pkwcf,
        SUM(IF(t.check_result = '03' AND nc.pkStatus = '1', 1,0)) pkycf,
        SUM(IF(t.check_result = '04' AND (nc.pyStatus = '0' OR nc.pyStatus IS NULL), 1,0)) pywcf,
        SUM(IF(t.check_result = '04' AND nc.pyStatus = '1', 1,0)) pyycf,
        SUM(IF(t.check_result = '02' AND (nc.cflStatus = '0' OR nc.cflStatus IS NULL) AND t.assets_type_15 &lt;&gt; t1.assets_type_15, 1,0)) cflwcf,
        SUM(IF(t.check_result = '02' AND nc.cflStatus = '1' AND t.assets_type_15 &lt;&gt; t1.assets_type_15, 1,0)) cflycf
        FROM t_assets_info_${regionId} t
        LEFT JOIN (
        SELECT tm.id, tm.card_code, tm.company_code, tm.cost_name, tm.assets_type_15
        FROM t_assets_info_tmp_${regionId} tm,
        (SELECT card_code AS cardCode, company_code AS  companyCode, MAX(last_update_time) TIME
        FROM t_assets_info_tmp_${regionId} GROUP BY card_code, company_code
        )ta WHERE tm.card_code = ta.cardCode
        AND tm.company_code = ta.companyCode AND tm.last_update_time = ta.time
        )t1 ON t.company_code = t1.company_code AND t.card_code = t1.card_code
        LEFT JOIN t_use_department ud ON t.use_dept_code = ud.use_code
        LEFT JOIN sys_invent_organ o  ON o.id = ud.organ_id
        LEFT JOIN t_sync_assets_card_0900 nc ON nc.assetsId = IFNULL(t1.id, t.id)
        WHERE o.region_id = ${regionId}
        AND t.assets_status = '1'
        AND t.check_result > '01'
        AND t.check_status IN ( '03', '001', '002', '003' )
        GROUP BY o.id
    </select>



    <select id="findReqularYearCount" parameterType="String" resultType="com.rookie.opcua.entity.ReqularAndSpecialYearCount">
            select
            YEAR(t.`create_time`) AS `invent_year`,
            o.id AS deptId,
            o.DEPARTMENT_NAME AS dept_name,
            t.company_code AS company_code,
            o.`PARENT_ID`  AS p_id,
            IF(o.PARENT_ID IS NOT NULL,1,0) AS is_leaf,
            sum(if(t.check_result = '04', 0, 1)) regular_total_count,
            SUM(IF(t.check_status != '03',1,0)) AS regular_no_invent,
            SUM(IF(t.check_status = '03', 1, 0)) AS regular_invent,
            SUM(IF(t.worth_value IS NOT NULL AND t.check_status = '03', t.worth_value, 0)) AS regular_worth_value
            FROM t_assets_info_${regionId} t
            LEFT JOIN t_use_department ud ON t.use_dept_code = ud.use_code
            LEFT JOIN sys_invent_organ o  ON o.id = ud.organ_id
            WHERE t.assets_status = '1'
            AND o.REGION_ID = #{regionId}
            AND t.company_code IS NOT NULL
            AND t.create_time IS NOT NULL
            AND YEAR(t.create_time) = #{year}
            GROUP BY o.id , t.company_code
    </select>


    <select id="findSpecialYearCount" parameterType="String" resultType="com.rookie.opcua.entity.ReqularAndSpecialYearCount">
        select
        YEAR(t.`create_time`) AS `invent_year`,
        o.id AS deptId,
        o.DEPARTMENT_NAME AS dept_name,
        t.company_code AS company_code,
        o.`PARENT_ID`  AS p_id,
        IF(o.PARENT_ID IS NOT NULL,1,0) AS is_leaf,
        sum(if(t.check_result = '04', 0, 1)) special_total_count,
        SUM(IF(t.check_status != '03',1,0)) AS special_no_invent,
        SUM(IF(t.check_status = '03', 1, 0)) AS special_invent,
        SUM(IF(t.worth_value IS NOT NULL AND t.check_status = '03', t.worth_value, 0)) AS special_worth_value
        FROM t_assets_info_${batchId} t
        LEFT JOIN t_use_department ud ON t.use_dept_code = ud.use_code
        LEFT JOIN sys_invent_organ o  ON o.id = ud.organ_id
        WHERE t.assets_status = '1'
        AND o.REGION_ID = #{regionId}
        AND t.company_code IS NOT NULL
        GROUP BY o.id , t.company_code
    </select>


    <select id="findCityReqularYearCount" parameterType="String" resultType="com.rookie.opcua.entity.ReqularAndSpecialYearCount">
        SELECT company_code,is_leaf,invent_year,
        ROUND(SUM(IF(regular_total_count,regular_total_count,0))) as regular_total_count ,
        ROUND(SUM(IF(regular_no_invent,regular_no_invent,0))) as regular_no_invent,
        ROUND(SUM(IF(regular_invent,regular_invent,0))) as regular_invent,
        ROUND(SUM(IF(regular_worth_value,regular_worth_value,0))) as regular_worth_value,
        ROUND(SUM(IF(special_total_count,special_total_count,0))) as special_total_count,
        ROUND(SUM(IF(special_no_invent,special_no_invent,0))) as special_no_invent,
        ROUND(SUM(IF(special_invent,special_invent,0))) as special_invent,
        ROUND(SUM(IF(special_worth_value,special_worth_value,0))) as  special_worth_value
        FROM t_reqular_and_special_year_count
        WHERE p_id = #{city} AND invent_year = #{year} GROUP BY company_code
    </select>

    <select id="findHeadOfficeYearCount" parameterType="String" resultType="com.rookie.opcua.entity.ReqularAndSpecialYearCount">
        SELECT company_code,is_leaf,invent_year,
        ROUND(SUM(IF(regular_total_count,regular_total_count,0))) as regular_total_count ,
        ROUND(SUM(IF(regular_no_invent,regular_no_invent,0))) as regular_no_invent,
        ROUND(SUM(IF(regular_invent,regular_invent,0))) as regular_invent,
        ROUND(SUM(IF(regular_worth_value,regular_worth_value,0))) as regular_worth_value,
        ROUND(SUM(IF(special_total_count,special_total_count,0))) as special_total_count,
        ROUND(SUM(IF(special_no_invent,special_no_invent,0))) as special_no_invent,
        ROUND(SUM(IF(special_invent,special_invent,0))) as special_invent,
        ROUND(SUM(IF(special_worth_value,special_worth_value,0))) as  special_worth_value
        FROM t_reqular_and_special_year_count
        WHERE invent_year = #{year} GROUP BY company_code
    </select>



    <select id="findIntellectInventYearCountForReqular" parameterType="String" resultType="com.rookie.opcua.entity.IntellectInventYearCount">
        SELECT
        YEAR(t.`create_time`) AS `invent_year`,
        o.id AS deptId,
        o.DEPARTMENT_NAME AS dept_name,
        t.company_code AS company_code,
        o.`PARENT_ID`  AS p_id,
        IF(o.PARENT_ID IS NOT NULL,1,0) AS is_leaf,
        SUM(IF(t.assets_status = '1',1,0)) AS total_count,
        SUM(IF(t.check_status = '03',1,0)) AS invent_count,
        SUM(IF(tir.check_type = '2' AND (tir.check_result = '1' OR tir.check_result = '2'),1,0)) AS wg_invent_count,
        ROUND(SUM(IF(tir.check_type = '2' AND (tir.check_result = '1' OR tir.check_result = '2'),t.worth_value,0))) AS wg_worth_value,
        SUM(IF(tir.check_type = '1' AND (tir.check_result = '1' OR tir.check_result = '2'),1,0)) AS xj_invent_count,
        ROUND(SUM(IF(tir.check_type = '1' AND (tir.check_result = '1' OR tir.check_result = '2'),t.worth_value,0))) AS xj_worth_value,
        SUM(IF(t.check_status = '03' AND ((t.is_app = '1' AND t.scan_code_record = '1') OR t.is_app IN ('2','3')), 1, 0)) AS app_invent_count,
        ROUND(SUM(IF(t.check_status = '03' AND ((t.is_app = '1' AND t.scan_code_record = '1') OR t.is_app IN ('2','3')), t.`worth_value`, 0))) AS app_worth_value,
        SUM(IF(t.check_status = '03' AND t.is_app = '1' AND t.scan_code_record = '0', 1, 0)) AS app_no_scan_invent_count,
        ROUND(SUM(IF(t.check_status = '03' AND t.is_app = '1' AND t.scan_code_record = '0', t.`worth_value`, 0))) AS app_no_scan_worth_value,
        SUM(IF(t.check_status = '03' AND (t.is_app = '0' OR t.is_app IS NULL), 1, 0)) AS pc_invent_count,
        ROUND(SUM(IF(t.check_status = '03' AND (t.is_app = '0' OR t.is_app IS NULL), t.worth_value, 0))) AS pc_worth_value
        FROM sys_invent_organ o
        LEFT JOIN t_use_department ud  ON o.id = ud.organ_id
        LEFT JOIN t_assets_info_${regionId} t ON t.use_dept_code = ud.use_code
        LEFT JOIN t_inspection_result_${regionId} tir  ON tir.card_code = t.card_code
        WHERE t.assets_status = '1'
        AND t.company_code IS NOT NULL
        AND t.create_time IS NOT NULL
        AND YEAR(t.create_time) = #{year}
        AND o.REGION_ID = #{regionId}
        GROUP BY o.id,t.`company_code`
    </select>


    <select id="findIntellectInventYearCountForSpecial" parameterType="String" resultType="com.rookie.opcua.entity.IntellectInventYearCount">
        SELECT
        YEAR(t.`create_time`) AS `invent_year`,
        o.id AS deptId,
        o.DEPARTMENT_NAME AS dept_name,
        t.company_code AS company_code,
        o.`PARENT_ID`  AS p_id,
        IF(o.PARENT_ID IS NOT NULL,1,0) AS is_leaf,
        SUM(IF(t.assets_status = '1',1,0)) AS total_count,
        SUM(IF(t.check_status = '03',1,0)) AS invent_count,
        SUM(IF(tir.check_type = '2' AND (tir.check_result = '1' OR tir.check_result = '2'),1,0)) AS wg_invent_count,
        ROUND(SUM(IF(tir.check_type = '2' AND (tir.check_result = '1' OR tir.check_result = '2'),t.worth_value,0))) AS wg_worth_value,
        SUM(IF(tir.check_type = '1' AND (tir.check_result = '1' OR tir.check_result = '2'),1,0)) AS xj_invent_count,
        ROUND(SUM(IF(tir.check_type = '1' AND (tir.check_result = '1' OR tir.check_result = '2'),t.worth_value,0))) AS xj_worth_value,
        SUM(IF(t.check_status = '03' AND ((t.is_app = '1' AND t.scan_code_record = '1') OR t.is_app IN ('2','3')), 1, 0)) AS app_invent_count,
        ROUND(SUM(IF(t.check_status = '03' AND ((t.is_app = '1' AND t.scan_code_record = '1') OR t.is_app IN ('2','3')), t.`worth_value`, 0))) AS app_worth_value,
        SUM(IF(t.check_status = '03' AND t.is_app = '1' AND t.scan_code_record = '0', 1, 0)) AS app_no_scan_invent_count,
        ROUND(SUM(IF(t.check_status = '03' AND t.is_app = '1' AND t.scan_code_record = '0', t.`worth_value`, 0))) AS app_no_scan_worth_value,
        SUM(IF(t.check_status = '03' AND (t.is_app = '0' OR t.is_app IS NULL), 1, 0)) AS pc_invent_count,
        ROUND(SUM(IF(t.check_status = '03' AND (t.is_app = '0' OR t.is_app IS NULL), t.worth_value, 0))) AS pc_worth_value
        FROM t_assets_info_${batchId} t
        LEFT JOIN (SELECT * FROM `t_inspection_result_${regionId}` WHERE YEAR(check_time) = 2019) tir ON t.`card_code` = tir.`card_code`
        LEFT JOIN t_use_department ud ON t.use_dept_code = ud.use_code
        LEFT JOIN sys_invent_organ o  ON o.id = ud.organ_id
        WHERE t.assets_status = '1'
        AND o.REGION_ID = #{regionId}
        AND t.company_code IS NOT NULL
        GROUP BY o.id,t.company_code
    </select>
</mapper>